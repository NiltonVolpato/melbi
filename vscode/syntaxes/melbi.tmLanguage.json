{
  "name": "Melbi",
  "scopeName": "source.melbi",
  "fileTypes": ["mb", "melbi", "ðŸ––"],
  "patterns": [
    { "include": "#comments" },
    { "include": "#keywords" },
    { "include": "#constants" },
    { "include": "#strings" },
    { "include": "#format-strings" },
    { "include": "#bytes" },
    { "include": "#numbers" },
    { "include": "#operators" },
    { "include": "#types" },
    { "include": "#identifiers" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.melbi",
          "match": "//.*$"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.melbi",
          "match": "\\b(if|then|else|where|match)\\b"
        },
        {
          "name": "keyword.operator.logical.melbi",
          "match": "\\b(not|and|or|otherwise)\\b"
        },
        {
          "name": "keyword.operator.melbi",
          "match": "\\b(as)\\b"
        },
        {
          "name": "storage.type.melbi",
          "match": "\\b(Record)\\b"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.language.boolean.melbi",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.melbi",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.melbi",
              "match": "\\\\(n|r|t|\\\\|\"|'|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})"
            }
          ]
        },
        {
          "name": "string.quoted.single.melbi",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.melbi",
              "match": "\\\\(n|r|t|\\\\|\"|'|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})"
            }
          ]
        }
      ]
    },
    "format-strings": {
      "patterns": [
        {
          "name": "string.quoted.double.format.melbi",
          "begin": "f\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.melbi",
              "match": "\\\\(n|r|t|\\\\|\"|'|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})|\\{\\{|\\}\\}"
            },
            {
              "name": "meta.embedded.expression.melbi",
              "begin": "\\{",
              "end": "\\}",
              "patterns": [
                { "include": "$self" }
              ]
            }
          ]
        },
        {
          "name": "string.quoted.single.format.melbi",
          "begin": "f'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.melbi",
              "match": "\\\\(n|r|t|\\\\|\"|'|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})|\\{\\{|\\}\\}"
            },
            {
              "name": "meta.embedded.expression.melbi",
              "begin": "\\{",
              "end": "\\}",
              "patterns": [
                { "include": "$self" }
              ]
            }
          ]
        }
      ]
    },
    "bytes": {
      "patterns": [
        {
          "name": "string.quoted.double.bytes.melbi",
          "begin": "b\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.melbi",
              "match": "\\\\(n|r|t|\\\\|\"|'|x[0-9a-fA-F]{2})"
            }
          ]
        },
        {
          "name": "string.quoted.single.bytes.melbi",
          "begin": "b'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.melbi",
              "match": "\\\\(n|r|t|\\\\|\"|'|x[0-9a-fA-F]{2})"
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.float.melbi",
          "match": "-?\\b\\d+\\.\\d+\\b"
        },
        {
          "name": "constant.numeric.integer.melbi",
          "match": "-?\\b\\d+\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.arrow.melbi",
          "match": "=>"
        },
        {
          "name": "keyword.operator.arithmetic.melbi",
          "match": "\\^|\\*|\\/|\\+|\\-"
        },
        {
          "name": "keyword.operator.assignment.melbi",
          "match": "="
        },
        {
          "name": "punctuation.accessor.melbi",
          "match": "\\."
        },
        {
          "name": "punctuation.separator.melbi",
          "match": ","
        },
        {
          "name": "punctuation.colon.melbi",
          "match": ":"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "entity.name.type.melbi",
          "match": "\\b[A-Z][A-Za-z0-9_]*(::([A-Z][A-Za-z0-9_]*))*\\b"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.quoted.melbi",
          "match": "`[A-Za-z0-9\\-_.:/ ]+`"
        },
        {
          "name": "variable.other.melbi",
          "match": "\\b[a-z_][A-Za-z0-9_]*\\b"
        }
      ]
    }
  }
}
